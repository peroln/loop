version: '3.9'

x-fpm-cli: &fpm_cli
  build:
    context: ../
    dockerfile: docker/php-fpm/Dockerfile
  restart: unless-stopped
  working_dir: /application
  volumes:
    - ../:/application
    - ../docker/php_cli/php-ini-overrides.ini:/etc/php/8.0/cli/conf.d/99-overrides.ini
    - ../docker/ssl_crt/temp/fullchain.pem:/etc/letsencrypt/live/5uhw14kedp3r.corp.merehead.xyz/fullchain.pem
    - ../docker/ssl_crt/temp/privkey.pem:/etc/letsencrypt/live/5uhw14kedp3r.corp.merehead.xyz/privkey.pem

services:

  postgres:
    image: postgres:13.2
    container_name: ${PROJECT_NAME}-postgres
    volumes:
      - ../:/application
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: unless-stopped
    ports:
      - ${POSTGRES_PORT}:5432
    networks:
      - loooop_platform

  nginx:
    build:
      context: ../
      dockerfile: docker/nginx/Dockerfile
    container_name: ${PROJECT_NAME}-webserver
    restart: unless-stopped
    working_dir: /application
    volumes:
      - ../:/application
      - ../docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - ${NGINX_PROXY_HTTP_PORT}:80
    links:
      - 'php-fpm'
    networks:
      - loooop_platform


  php-fpm:
    build:
      context: ../
      dockerfile: docker/php-fpm/Dockerfile
    container_name: ${PROJECT_NAME}-php-fpm
    restart: unless-stopped
    working_dir: /application
    volumes:
      - ../:/application
      - ../docker/php-fpm/php-ini-overrides.ini:/etc/php/8.0/fpm/conf.d/99-overrides.ini
      - ../docker/ssl_crt/temp/fullchain.pem:/etc/letsencrypt/live/5uhw14kedp3r.corp.merehead.xyz/fullchain.pem
      - ../docker/ssl_crt/temp/privkey.pem:/etc/letsencrypt/live/5uhw14kedp3r.corp.merehead.xyz/privkey.pem
    networks:
      - loooop_platform
    links:
      - postgres
      - redis

  redis:
    image: redis:alpine
    container_name: ${PROJECT_NAME}-redis
    restart: unless-stopped
    working_dir: /application
    volumes:
      - ./redis-data:/data
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - loooop_platform

#  mysql:
#    image: mysql:8.0.23
#    container_name: ${PROJECT_NAME}-mysql
#    working_dir: /application
#    restart: unless-stopped
#    volumes:
#      - ./mysql-data:/var/lib/mysql
#      - ../:/application
#    environment:
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#      - MYSQL_DATABASE=${MYSQL_DATABASE}
#      - MYSQL_USER=${MYSQL_USER}
#      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
#    ports:
#      - ${MYSQL_PORT}:3306


  laravel-echo:
    container_name: ${PROJECT_NAME:-project}_laravel_echo
    <<: *fpm_cli
    command: [ "php", "artisan", "websockets:serve" ]
    ports:
      - ${LARAVEL_ECHO_PORT:-8084}:6001
    links:
      - 'redis:redis'
    networks:
      - loooop_platform

  cron:
    build:
      context: ../
      dockerfile: docker/php_cron/Dockerfile
    container_name: ${PROJECT_NAME}-cron
    working_dir: /application
    restart: unless-stopped
    volumes:
      - ../:/application
      - ../docker/ssl_crt/temp/fullchain.pem:/etc/letsencrypt/live/5uhw14kedp3r.corp.merehead.xyz/fullchain.pem
      - ../docker/ssl_crt/temp/privkey.pem:/etc/letsencrypt/live/5uhw14kedp3r.corp.merehead.xyz/privkey.pem
    networks:
      - loooop_platform
    links:
      - postgres
      - redis

  queue-worker:
    container_name: ${PROJECT_NAME}-queue-worker
    <<: *fpm_cli
    command: [ "php", "artisan", "queue:work", "--delay=0", "--tries=3" ]
    networks:
      - loooop_platform
    links:
      - postgres
      - redis

networks:
  loooop_platform:
    name: loooop_platform
    driver: bridge

volumes:
  postgres:
  redis:

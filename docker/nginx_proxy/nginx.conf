server {
    listen 80;
    server_name default;
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}
server {
    listen 443 ssl;
    server_name 5uhw14kedp3r.corp.merehead.xyz;
    ssl_certificate /etc/letsencrypt/live/5uhw14kedp3r.corp.merehead.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/5uhw14kedp3r.corp.merehead.xyz/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header X-Frame-Options SAMEORIGIN;
        add_header "X-XSS-Protection" "1; mode=block";
        proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_pass http://loooop-frontend:3000;
        proxy_redirect off;
    }

    location /api/ {
        proxy_set_header Host $host;
        proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_pass http://loooop_platform-webserver/api/;
        proxy_redirect off;
    }

    location /storage/ {
        proxy_set_header Host $host;
        proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_pass http://loooop_platform-webserver/storage/;
        proxy_redirect off;
    }

    location /telescope/ {
        proxy_set_header Host $host;
        proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_pass http://loooop_platform-webserver/telescope/;
        proxy_redirect off;
    }

    location /vendor/ {
        proxy_set_header Host $host;
        proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_pass http://loooop_platform-webserver/vendor/;
        proxy_redirect off;
    }
    location /5983675zfmg/ {
        proxy_set_header Host $host;
        proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_pass http://loooop_platform-webserver/laravel-websockets;
        proxy_redirect off;
    }
    location = /robots.txt {
        add_header Content-Type text/plain;

        return 200 "User-agent: *\nDisallow: /\n";
    }
}
